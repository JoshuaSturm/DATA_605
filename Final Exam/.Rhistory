mutate_all(as.ordered)
tf <- mutate_at(tf, vars(matches("ExterQ.*")), fct_relevel, ... = "Fa", "TA", "Gd", "Ex")
tf <- mutate_at(tf, vars(matches("ExterC.*")), fct_relevel, ... = "Po", "Fa", "TA", "Gd", "Ex")
tf$LotFrontage[is.na(tf$LotFrontage)] <- 0
tf <- mutate_at(tf, colnames(tf)[colSums(is.na(tf)) > 0], addNA)
tf$MasVnrArea %<>% as.numeric()
m1 <- lm(SalePrice ~ ., data = trf)
predict(m1, newdata = tf, type = "response")
?read.csv
length(m1$coefficients) > m1$rank
m1$rank
m1$coefficients
length(m1$coefficients)
summary(m1)
table(trf$LotFrontage)
table(trf$BldgType)
unloadNamespace("MASS")
colSums(is.na(train))
# Convert training dataset
trf <- train %>%
select(-c(Id, Alley, BldgType, LowQualFinSF, PoolArea, PoolQC, Utilities, MiscFeature, MiscVal, Street))
trf %<>%
mutate_if(is.character, as_factor)
trf[, c("GarageYrBlt", "MoSold", "YrSold", "YearBuilt", "YearRemodAdd")] %<>%
mutate_all(as.factor)
trf$MSSubClass <- factor(trf$MSSubClass, levels = c(20, 30, 40, 45, 50, 60, 70, 75, 80, 85, 90, 120, 150, 160, 180))
trf[, c("OverallQual", "OverallCond", "ExterQual", "ExterCond")] %<>%
mutate_all(as.ordered)
trf <- mutate_at(trf, vars(matches("ExterQ.*")), fct_relevel, ... = "Fa", "TA", "Gd", "Ex")
trf <- mutate_at(trf, vars(matches("ExterC.*")), fct_relevel, ... = "Po", "Fa", "TA", "Gd", "Ex")
trf$LotFrontage[is.na(trf$LotFrontage)] <- 0
trf <- mutate_at(trf, colnames(trf)[colSums(is.na(trf)) > 0], addNA)
trf$MasVnrArea %<>% as.numeric()
# Convert testing dataset
tf <- test %>%
select(-c(Id, Alley, BldgType, LowQualFinSF, PoolArea, PoolQC, Utilities, MiscFeature, MiscVal, Street))
tf <- tf[!(tf$MSSubClass %in% c(150)), ]
tf <- tf[!(tf$MSZoning %in% c(NA)), ]
tf <- tf[!(tf$YearBuilt %in% c(1879, 1895, 1896, 1901, 1902, 1907)), ]
tf <- tf[!(tf$Exterior1st %in% c(NA)), ]
tf <- tf[!(tf$KitchenQual %in% c(NA)), ]
tf <- tf[!(tf$Functional %in% c(NA)), ]
tf <- tf[!(tf$GarageYrBlt %in% c(1917, 1919, 1943, 2207)), ]
tf <- tf[!(tf$SaleType %in% c(NA)), ]
tf <- tf[!(tf$BsmtFinSF1 %in% c(NA)), ]
tf <- tf[!(tf$BsmtFullBath %in% c(NA)), ]
tf <- tf[!(tf$GarageCars %in% c(NA)), ]
tf %<>%
mutate_if(is.character, as_factor)
tf[, c("GarageYrBlt", "MoSold", "YrSold", "YearBuilt", "YearRemodAdd")] %<>%
mutate_all(as.factor)
tf$MSSubClass <- factor(tf$MSSubClass, levels = c(20, 30, 40, 45, 50, 60, 70, 75, 80, 85, 90, 120, 150, 160, 180))
tf[, c("OverallQual", "OverallCond", "ExterQual", "ExterCond")] %<>%
mutate_all(as.ordered)
tf <- mutate_at(tf, vars(matches("ExterQ.*")), fct_relevel, ... = "Fa", "TA", "Gd", "Ex")
tf <- mutate_at(tf, vars(matches("ExterC.*")), fct_relevel, ... = "Po", "Fa", "TA", "Gd", "Ex")
tf$LotFrontage[is.na(tf$LotFrontage)] <- 0
tf <- mutate_at(tf, colnames(tf)[colSums(is.na(tf)) > 0], addNA)
tf$MasVnrArea %<>% as.numeric()
m1 <- lm(SalePrice ~ ., data = trf)
predict(m1, newdata = tf, type = "response")
summary(m1)
length(m1$coefficients) > m1$rank
m1$rank
length(m1$coefficients)
table(trf$YearBuilt)
table(tf$YearBuilt)
unloadNamespace("MASS")
colSums(is.na(train))
# Convert training dataset
trf <- train %>%
select(-c(Id, Alley, BldgType, LowQualFinSF, PoolArea, PoolQC, Utilities, MiscFeature, MiscVal, Street))
tf <- tf[!(tf$YearBuilt %in% c(1893)), ]
trf %<>%
mutate_if(is.character, as_factor)
trf[, c("GarageYrBlt", "MoSold", "YrSold", "YearBuilt", "YearRemodAdd")] %<>%
mutate_all(as.factor)
trf$MSSubClass <- factor(trf$MSSubClass, levels = c(20, 30, 40, 45, 50, 60, 70, 75, 80, 85, 90, 120, 150, 160, 180))
trf[, c("OverallQual", "OverallCond", "ExterQual", "ExterCond")] %<>%
mutate_all(as.ordered)
trf <- mutate_at(trf, vars(matches("ExterQ.*")), fct_relevel, ... = "Fa", "TA", "Gd", "Ex")
trf <- mutate_at(trf, vars(matches("ExterC.*")), fct_relevel, ... = "Po", "Fa", "TA", "Gd", "Ex")
trf$LotFrontage[is.na(trf$LotFrontage)] <- 0
trf <- mutate_at(trf, colnames(trf)[colSums(is.na(trf)) > 0], addNA)
trf$MasVnrArea %<>% as.numeric()
# Convert testing dataset
tf <- test %>%
select(-c(Id, Alley, BldgType, LowQualFinSF, PoolArea, PoolQC, Utilities, MiscFeature, MiscVal, Street))
tf <- tf[!(tf$MSSubClass %in% c(150)), ]
tf <- tf[!(tf$MSZoning %in% c(NA)), ]
tf <- tf[!(tf$YearBuilt %in% c(1879, 1895, 1896, 1901, 1902, 1907)), ]
tf <- tf[!(tf$Exterior1st %in% c(NA)), ]
tf <- tf[!(tf$KitchenQual %in% c(NA)), ]
tf <- tf[!(tf$Functional %in% c(NA)), ]
tf <- tf[!(tf$GarageYrBlt %in% c(1917, 1919, 1943, 2207)), ]
tf <- tf[!(tf$SaleType %in% c(NA)), ]
tf <- tf[!(tf$BsmtFinSF1 %in% c(NA)), ]
tf <- tf[!(tf$BsmtFullBath %in% c(NA)), ]
tf <- tf[!(tf$GarageCars %in% c(NA)), ]
tf %<>%
mutate_if(is.character, as_factor)
tf[, c("GarageYrBlt", "MoSold", "YrSold", "YearBuilt", "YearRemodAdd")] %<>%
mutate_all(as.factor)
tf$MSSubClass <- factor(tf$MSSubClass, levels = c(20, 30, 40, 45, 50, 60, 70, 75, 80, 85, 90, 120, 150, 160, 180))
tf[, c("OverallQual", "OverallCond", "ExterQual", "ExterCond")] %<>%
mutate_all(as.ordered)
tf <- mutate_at(tf, vars(matches("ExterQ.*")), fct_relevel, ... = "Fa", "TA", "Gd", "Ex")
tf <- mutate_at(tf, vars(matches("ExterC.*")), fct_relevel, ... = "Po", "Fa", "TA", "Gd", "Ex")
tf$LotFrontage[is.na(tf$LotFrontage)] <- 0
tf <- mutate_at(tf, colnames(tf)[colSums(is.na(tf)) > 0], addNA)
tf$MasVnrArea %<>% as.numeric()
m1 <- lm(SalePrice ~ ., data = trf)
# predict(m1, newdata = tf, type = "response")
summary(m1)
unloadNamespace("MASS")
colSums(is.na(train))
# Convert training dataset
trf <- train %>%
select(-c(Id, Alley, BldgType, LowQualFinSF, PoolArea, PoolQC, Utilities, MiscFeature, MiscVal, Street))
trf <- trf[!(tf$YearBuilt %in% c(1893)), ]
trf %<>%
mutate_if(is.character, as_factor)
trf[, c("GarageYrBlt", "MoSold", "YrSold", "YearBuilt", "YearRemodAdd")] %<>%
mutate_all(as.factor)
trf$MSSubClass <- factor(trf$MSSubClass, levels = c(20, 30, 40, 45, 50, 60, 70, 75, 80, 85, 90, 120, 150, 160, 180))
trf[, c("OverallQual", "OverallCond", "ExterQual", "ExterCond")] %<>%
mutate_all(as.ordered)
trf <- mutate_at(trf, vars(matches("ExterQ.*")), fct_relevel, ... = "Fa", "TA", "Gd", "Ex")
trf <- mutate_at(trf, vars(matches("ExterC.*")), fct_relevel, ... = "Po", "Fa", "TA", "Gd", "Ex")
trf$LotFrontage[is.na(trf$LotFrontage)] <- 0
trf <- mutate_at(trf, colnames(trf)[colSums(is.na(trf)) > 0], addNA)
trf$MasVnrArea %<>% as.numeric()
# Convert testing dataset
tf <- test %>%
select(-c(Id, Alley, BldgType, LowQualFinSF, PoolArea, PoolQC, Utilities, MiscFeature, MiscVal, Street))
tf <- tf[!(tf$MSSubClass %in% c(150)), ]
tf <- tf[!(tf$MSZoning %in% c(NA)), ]
tf <- tf[!(tf$YearBuilt %in% c(1879, 1895, 1896, 1901, 1902, 1907)), ]
tf <- tf[!(tf$Exterior1st %in% c(NA)), ]
tf <- tf[!(tf$KitchenQual %in% c(NA)), ]
tf <- tf[!(tf$Functional %in% c(NA)), ]
tf <- tf[!(tf$GarageYrBlt %in% c(1917, 1919, 1943, 2207)), ]
tf <- tf[!(tf$SaleType %in% c(NA)), ]
tf <- tf[!(tf$BsmtFinSF1 %in% c(NA)), ]
tf <- tf[!(tf$BsmtFullBath %in% c(NA)), ]
tf <- tf[!(tf$GarageCars %in% c(NA)), ]
tf %<>%
mutate_if(is.character, as_factor)
tf[, c("GarageYrBlt", "MoSold", "YrSold", "YearBuilt", "YearRemodAdd")] %<>%
mutate_all(as.factor)
tf$MSSubClass <- factor(tf$MSSubClass, levels = c(20, 30, 40, 45, 50, 60, 70, 75, 80, 85, 90, 120, 150, 160, 180))
tf[, c("OverallQual", "OverallCond", "ExterQual", "ExterCond")] %<>%
mutate_all(as.ordered)
tf <- mutate_at(tf, vars(matches("ExterQ.*")), fct_relevel, ... = "Fa", "TA", "Gd", "Ex")
tf <- mutate_at(tf, vars(matches("ExterC.*")), fct_relevel, ... = "Po", "Fa", "TA", "Gd", "Ex")
tf$LotFrontage[is.na(tf$LotFrontage)] <- 0
tf <- mutate_at(tf, colnames(tf)[colSums(is.na(tf)) > 0], addNA)
tf$MasVnrArea %<>% as.numeric()
m1 <- lm(SalePrice ~ ., data = trf)
# predict(m1, newdata = tf, type = "response")
summary(m1)
unloadNamespace("MASS")
colSums(is.na(train))
# Convert training dataset
trf <- train %>%
select(-c(Id, Alley, BldgType, LowQualFinSF, PoolArea, PoolQC, Utilities, MiscFeature, MiscVal, Street))
trf <- trf[!(trf$YearBuilt %in% c(1893)), ]
trf %<>%
mutate_if(is.character, as_factor)
trf[, c("GarageYrBlt", "MoSold", "YrSold", "YearBuilt", "YearRemodAdd")] %<>%
mutate_all(as.factor)
trf$MSSubClass <- factor(trf$MSSubClass, levels = c(20, 30, 40, 45, 50, 60, 70, 75, 80, 85, 90, 120, 150, 160, 180))
trf[, c("OverallQual", "OverallCond", "ExterQual", "ExterCond")] %<>%
mutate_all(as.ordered)
trf <- mutate_at(trf, vars(matches("ExterQ.*")), fct_relevel, ... = "Fa", "TA", "Gd", "Ex")
trf <- mutate_at(trf, vars(matches("ExterC.*")), fct_relevel, ... = "Po", "Fa", "TA", "Gd", "Ex")
trf$LotFrontage[is.na(trf$LotFrontage)] <- 0
trf <- mutate_at(trf, colnames(trf)[colSums(is.na(trf)) > 0], addNA)
trf$MasVnrArea %<>% as.numeric()
# Convert testing dataset
tf <- test %>%
select(-c(Id, Alley, BldgType, LowQualFinSF, PoolArea, PoolQC, Utilities, MiscFeature, MiscVal, Street))
tf <- tf[!(tf$MSSubClass %in% c(150)), ]
tf <- tf[!(tf$MSZoning %in% c(NA)), ]
tf <- tf[!(tf$YearBuilt %in% c(1879, 1895, 1896, 1901, 1902, 1907)), ]
tf <- tf[!(tf$Exterior1st %in% c(NA)), ]
tf <- tf[!(tf$KitchenQual %in% c(NA)), ]
tf <- tf[!(tf$Functional %in% c(NA)), ]
tf <- tf[!(tf$GarageYrBlt %in% c(1917, 1919, 1943, 2207)), ]
tf <- tf[!(tf$SaleType %in% c(NA)), ]
tf <- tf[!(tf$BsmtFinSF1 %in% c(NA)), ]
tf <- tf[!(tf$BsmtFullBath %in% c(NA)), ]
tf <- tf[!(tf$GarageCars %in% c(NA)), ]
tf %<>%
mutate_if(is.character, as_factor)
tf[, c("GarageYrBlt", "MoSold", "YrSold", "YearBuilt", "YearRemodAdd")] %<>%
mutate_all(as.factor)
tf$MSSubClass <- factor(tf$MSSubClass, levels = c(20, 30, 40, 45, 50, 60, 70, 75, 80, 85, 90, 120, 150, 160, 180))
tf[, c("OverallQual", "OverallCond", "ExterQual", "ExterCond")] %<>%
mutate_all(as.ordered)
tf <- mutate_at(tf, vars(matches("ExterQ.*")), fct_relevel, ... = "Fa", "TA", "Gd", "Ex")
tf <- mutate_at(tf, vars(matches("ExterC.*")), fct_relevel, ... = "Po", "Fa", "TA", "Gd", "Ex")
tf$LotFrontage[is.na(tf$LotFrontage)] <- 0
tf <- mutate_at(tf, colnames(tf)[colSums(is.na(tf)) > 0], addNA)
tf$MasVnrArea %<>% as.numeric()
m1 <- lm(SalePrice ~ ., data = trf)
# predict(m1, newdata = tf, type = "response")
summary(m1)
unloadNamespace("MASS")
colSums(is.na(train))
# Convert training dataset
trf <- train %>%
select(-c(Id, Alley, BldgType, LotFrontage, LowQualFinSF, PoolArea, PoolQC, Utilities, MiscFeature, MiscVal, Street))
trf <- trf[!(trf$YearBuilt %in% c(1893)), ]
trf %<>%
mutate_if(is.character, as_factor)
trf[, c("GarageYrBlt", "MoSold", "YrSold", "YearBuilt", "YearRemodAdd")] %<>%
mutate_all(as.factor)
trf$MSSubClass <- factor(trf$MSSubClass, levels = c(20, 30, 40, 45, 50, 60, 70, 75, 80, 85, 90, 120, 150, 160, 180))
trf[, c("OverallQual", "OverallCond", "ExterQual", "ExterCond")] %<>%
mutate_all(as.ordered)
trf <- mutate_at(trf, vars(matches("ExterQ.*")), fct_relevel, ... = "Fa", "TA", "Gd", "Ex")
trf <- mutate_at(trf, vars(matches("ExterC.*")), fct_relevel, ... = "Po", "Fa", "TA", "Gd", "Ex")
trf$LotFrontage[is.na(trf$LotFrontage)] <- 0
trf <- mutate_at(trf, colnames(trf)[colSums(is.na(trf)) > 0], addNA)
trf$MasVnrArea %<>% as.numeric()
# Convert testing dataset
tf <- test %>%
select(-c(Id, Alley, BldgType, LotFrontage, LowQualFinSF, PoolArea, PoolQC, Utilities, MiscFeature, MiscVal, Street))
tf <- tf[!(tf$MSSubClass %in% c(150)), ]
tf <- tf[!(tf$MSZoning %in% c(NA)), ]
tf <- tf[!(tf$YearBuilt %in% c(1879, 1895, 1896, 1901, 1902, 1907)), ]
tf <- tf[!(tf$Exterior1st %in% c(NA)), ]
tf <- tf[!(tf$KitchenQual %in% c(NA)), ]
tf <- tf[!(tf$Functional %in% c(NA)), ]
tf <- tf[!(tf$GarageYrBlt %in% c(1917, 1919, 1943, 2207)), ]
tf <- tf[!(tf$SaleType %in% c(NA)), ]
tf <- tf[!(tf$BsmtFinSF1 %in% c(NA)), ]
tf <- tf[!(tf$BsmtFullBath %in% c(NA)), ]
tf <- tf[!(tf$GarageCars %in% c(NA)), ]
tf %<>%
mutate_if(is.character, as_factor)
tf[, c("GarageYrBlt", "MoSold", "YrSold", "YearBuilt", "YearRemodAdd")] %<>%
mutate_all(as.factor)
tf$MSSubClass <- factor(tf$MSSubClass, levels = c(20, 30, 40, 45, 50, 60, 70, 75, 80, 85, 90, 120, 150, 160, 180))
tf[, c("OverallQual", "OverallCond", "ExterQual", "ExterCond")] %<>%
mutate_all(as.ordered)
tf <- mutate_at(tf, vars(matches("ExterQ.*")), fct_relevel, ... = "Fa", "TA", "Gd", "Ex")
tf <- mutate_at(tf, vars(matches("ExterC.*")), fct_relevel, ... = "Po", "Fa", "TA", "Gd", "Ex")
tf$LotFrontage[is.na(tf$LotFrontage)] <- 0
tf <- mutate_at(tf, colnames(tf)[colSums(is.na(tf)) > 0], addNA)
tf$MasVnrArea %<>% as.numeric()
m1 <- lm(SalePrice ~ ., data = trf)
# predict(m1, newdata = tf, type = "response")
summary(m1)
predict(m1, newdata = tf, type = "response")
unloadNamespace("MASS")
colSums(is.na(train))
# Convert training dataset
trf <- train %>%
select(-c(Id, Alley, BldgType, LotFrontage, LowQualFinSF, PoolArea, PoolQC, Utilities, MiscFeature, MiscVal, Street))
trf <- trf[!(trf$YearBuilt %in% c(1893)), ]
trf %<>%
mutate_if(is.character, as_factor)
trf[, c("GarageYrBlt", "MoSold", "YrSold", "YearBuilt", "YearRemodAdd")] %<>%
mutate_all(as.factor)
trf$MSSubClass <- factor(trf$MSSubClass, levels = c(20, 30, 40, 45, 50, 60, 70, 75, 80, 85, 90, 120, 150, 160, 180))
trf[, c("OverallQual", "OverallCond", "ExterQual", "ExterCond")] %<>%
mutate_all(as.ordered)
trf <- mutate_at(trf, vars(matches("ExterQ.*")), fct_relevel, ... = "Fa", "TA", "Gd", "Ex")
trf <- mutate_at(trf, vars(matches("ExterC.*")), fct_relevel, ... = "Po", "Fa", "TA", "Gd", "Ex")
# trf$LotFrontage[is.na(trf$LotFrontage)] <- 0
trf <- mutate_at(trf, colnames(trf)[colSums(is.na(trf)) > 0], addNA)
trf$MasVnrArea %<>% as.numeric()
# Convert testing dataset
tf <- test %>%
select(-c(Id, Alley, BldgType, LotFrontage, LowQualFinSF, PoolArea, PoolQC, Utilities, MiscFeature, MiscVal, Street))
tf <- tf[!(tf$MSSubClass %in% c(150)), ]
tf <- tf[!(tf$MSZoning %in% c(NA)), ]
tf <- tf[!(tf$YearBuilt %in% c(1879, 1895, 1896, 1901, 1902, 1907)), ]
tf <- tf[!(tf$Exterior1st %in% c(NA)), ]
tf <- tf[!(tf$KitchenQual %in% c(NA)), ]
tf <- tf[!(tf$Functional %in% c(NA)), ]
tf <- tf[!(tf$GarageYrBlt %in% c(1917, 1919, 1943, 2207)), ]
tf <- tf[!(tf$SaleType %in% c(NA)), ]
tf <- tf[!(tf$BsmtFinSF1 %in% c(NA)), ]
tf <- tf[!(tf$BsmtFullBath %in% c(NA)), ]
tf <- tf[!(tf$GarageCars %in% c(NA)), ]
tf %<>%
mutate_if(is.character, as_factor)
tf[, c("GarageYrBlt", "MoSold", "YrSold", "YearBuilt", "YearRemodAdd")] %<>%
mutate_all(as.factor)
tf$MSSubClass <- factor(tf$MSSubClass, levels = c(20, 30, 40, 45, 50, 60, 70, 75, 80, 85, 90, 120, 150, 160, 180))
tf[, c("OverallQual", "OverallCond", "ExterQual", "ExterCond")] %<>%
mutate_all(as.ordered)
tf <- mutate_at(tf, vars(matches("ExterQ.*")), fct_relevel, ... = "Fa", "TA", "Gd", "Ex")
tf <- mutate_at(tf, vars(matches("ExterC.*")), fct_relevel, ... = "Po", "Fa", "TA", "Gd", "Ex")
# tf$LotFrontage[is.na(tf$LotFrontage)] <- 0
tf <- mutate_at(tf, colnames(tf)[colSums(is.na(tf)) > 0], addNA)
tf$MasVnrArea %<>% as.numeric()
m1 <- lm(SalePrice ~ ., data = trf)
summary(m1)
predict(m1, newdata = tf, type = "response")
unloadNamespace("MASS")
colSums(is.na(train))
# Convert training dataset
trf <- train %>%
select(-c(Id, Alley, BldgType, LotFrontage, LowQualFinSF, PoolArea, PoolQC, Utilities, MiscFeature, MiscVal, Street))
trf <- trf[!(trf$YearBuilt %in% c(1893)), ]
trf %<>%
mutate_if(is.character, as_factor)
trf[, c("GarageYrBlt", "MoSold", "YrSold", "YearBuilt", "YearRemodAdd")] %<>%
mutate_all(as.factor)
trf$MSSubClass <- factor(trf$MSSubClass, levels = c(20, 30, 40, 45, 50, 60, 70, 75, 80, 85, 90, 120, 150, 160, 180))
trf[, c("OverallQual", "OverallCond", "ExterQual", "ExterCond")] %<>%
mutate_all(as.ordered)
trf <- mutate_at(trf, vars(matches("ExterQ.*")), fct_relevel, ... = "Fa", "TA", "Gd", "Ex")
trf <- mutate_at(trf, vars(matches("ExterC.*")), fct_relevel, ... = "Po", "Fa", "TA", "Gd", "Ex")
# trf$LotFrontage[is.na(trf$LotFrontage)] <- 0
trf <- mutate_at(trf, colnames(trf)[colSums(is.na(trf)) > 0], addNA)
trf$MasVnrArea %<>% as.numeric()
# Convert testing dataset
tf <- test %>%
select(-c(Id, Alley, BldgType, LotFrontage, LowQualFinSF, PoolArea, PoolQC, Utilities, MiscFeature, MiscVal, Street))
tf <- tf[!(tf$MSSubClass %in% c(150)), ]
tf <- tf[!(tf$MSZoning %in% c(NA)), ]
tf <- tf[!(tf$YearBuilt %in% c(1879, 1895, 1896, 1901, 1902, 1907)), ]
tf <- tf[!(tf$Exterior1st %in% c(NA)), ]
tf <- tf[!(tf$KitchenQual %in% c(NA)), ]
tf <- tf[!(tf$Functional %in% c(NA)), ]
tf <- tf[!(tf$GarageYrBlt %in% c(1917, 1919, 1943, 2207)), ]
tf <- tf[!(tf$SaleType %in% c(NA)), ]
tf <- tf[!(tf$BsmtFinSF1 %in% c(NA)), ]
tf <- tf[!(tf$BsmtFullBath %in% c(NA)), ]
tf <- tf[!(tf$GarageCars %in% c(NA)), ]
tf <- tf[!(tf$Condition2 %in% c(PosA)), ]
tf %<>%
mutate_if(is.character, as_factor)
tf[, c("GarageYrBlt", "MoSold", "YrSold", "YearBuilt", "YearRemodAdd")] %<>%
mutate_all(as.factor)
tf$MSSubClass <- factor(tf$MSSubClass, levels = c(20, 30, 40, 45, 50, 60, 70, 75, 80, 85, 90, 120, 150, 160, 180))
tf[, c("OverallQual", "OverallCond", "ExterQual", "ExterCond")] %<>%
mutate_all(as.ordered)
tf <- mutate_at(tf, vars(matches("ExterQ.*")), fct_relevel, ... = "Fa", "TA", "Gd", "Ex")
tf <- mutate_at(tf, vars(matches("ExterC.*")), fct_relevel, ... = "Po", "Fa", "TA", "Gd", "Ex")
# tf$LotFrontage[is.na(tf$LotFrontage)] <- 0
tf <- mutate_at(tf, colnames(tf)[colSums(is.na(tf)) > 0], addNA)
tf$MasVnrArea %<>% as.numeric()
m1 <- lm(SalePrice ~ ., data = trf)
summary(m1)
predict(m1, newdata = tf, type = "response")
unloadNamespace("MASS")
colSums(is.na(train))
# Convert training dataset
trf <- train %>%
select(-c(Id, Alley, BldgType, LotFrontage, LowQualFinSF, PoolArea, PoolQC, Utilities, MiscFeature, MiscVal, Street))
trf <- trf[!(trf$YearBuilt %in% c(1893)), ]
trf %<>%
mutate_if(is.character, as_factor)
trf[, c("GarageYrBlt", "MoSold", "YrSold", "YearBuilt", "YearRemodAdd")] %<>%
mutate_all(as.factor)
trf$MSSubClass <- factor(trf$MSSubClass, levels = c(20, 30, 40, 45, 50, 60, 70, 75, 80, 85, 90, 120, 150, 160, 180))
trf[, c("OverallQual", "OverallCond", "ExterQual", "ExterCond")] %<>%
mutate_all(as.ordered)
trf <- mutate_at(trf, vars(matches("ExterQ.*")), fct_relevel, ... = "Fa", "TA", "Gd", "Ex")
trf <- mutate_at(trf, vars(matches("ExterC.*")), fct_relevel, ... = "Po", "Fa", "TA", "Gd", "Ex")
# trf$LotFrontage[is.na(trf$LotFrontage)] <- 0
trf <- mutate_at(trf, colnames(trf)[colSums(is.na(trf)) > 0], addNA)
trf$MasVnrArea %<>% as.numeric()
# Convert testing dataset
tf <- test %>%
select(-c(Id, Alley, BldgType, LotFrontage, LowQualFinSF, PoolArea, PoolQC, Utilities, MiscFeature, MiscVal, Street))
tf <- tf[!(tf$MSSubClass %in% c(150)), ]
tf <- tf[!(tf$MSZoning %in% c(NA)), ]
tf <- tf[!(tf$YearBuilt %in% c(1879, 1895, 1896, 1901, 1902, 1907)), ]
tf <- tf[!(tf$Exterior1st %in% c(NA)), ]
tf <- tf[!(tf$KitchenQual %in% c(NA)), ]
tf <- tf[!(tf$Functional %in% c(NA)), ]
tf <- tf[!(tf$GarageYrBlt %in% c(1917, 1919, 1943, 2207)), ]
tf <- tf[!(tf$SaleType %in% c(NA)), ]
tf <- tf[!(tf$BsmtFinSF1 %in% c(NA)), ]
tf <- tf[!(tf$BsmtFullBath %in% c(NA)), ]
tf <- tf[!(tf$GarageCars %in% c(NA)), ]
tf <- tf[!(tf$Condition2 %in% c("PosA")), ]
tf %<>%
mutate_if(is.character, as_factor)
tf[, c("GarageYrBlt", "MoSold", "YrSold", "YearBuilt", "YearRemodAdd")] %<>%
mutate_all(as.factor)
tf$MSSubClass <- factor(tf$MSSubClass, levels = c(20, 30, 40, 45, 50, 60, 70, 75, 80, 85, 90, 120, 150, 160, 180))
tf[, c("OverallQual", "OverallCond", "ExterQual", "ExterCond")] %<>%
mutate_all(as.ordered)
tf <- mutate_at(tf, vars(matches("ExterQ.*")), fct_relevel, ... = "Fa", "TA", "Gd", "Ex")
tf <- mutate_at(tf, vars(matches("ExterC.*")), fct_relevel, ... = "Po", "Fa", "TA", "Gd", "Ex")
# tf$LotFrontage[is.na(tf$LotFrontage)] <- 0
tf <- mutate_at(tf, colnames(tf)[colSums(is.na(tf)) > 0], addNA)
tf$MasVnrArea %<>% as.numeric()
m1 <- lm(SalePrice ~ ., data = trf)
summary(m1)
predict(m1, newdata = tf, type = "response")
length(m1$coefficients) > m1$rank
m1$rank
length(m1$coefficients)
rp1 <- ggplot(m1, aes(.fitted, .resid)) +
geom_point() +
geom_hline(yintercept = 0) +
geom_smooth(se = FALSE) +
labs(title = "Residuals vs Fitted")
rp2 <- ggplot(m1, aes(.fitted, .stdresid)) +
geom_point() +
geom_hline(yintercept = 0) +
geom_smooth(se = FALSE)
rp3 <- ggplot(m1) +
stat_qq(aes(sample = .stdresid)) +
geom_abline()
rp4 <- ggplot(m1, aes(.fitted, sqrt(abs(.stdresid)))) +
geom_point() +
geom_smooth(se = FALSE) +
labs(title = "Scale-Location")
rp5 <- ggplot(m1, aes(seq_along(.cooksd), .cooksd)) +
geom_col() +
ylim(0, 0.0075) +
labs(title = "Cook's Distance")
rp6 <- ggplot(m1, aes(.hat, .stdresid)) +
geom_point(aes(size = .cooksd)) +
geom_smooth(se = FALSE, size = 0.5) +
labs(title = "Residuals vs Leverage")
rp7 <- ggplot(m1, aes(.hat, .cooksd)) +
geom_vline(xintercept = 0, colour = NA) +
geom_abline(slope = seq(0, 3, by = 0.5), colour = "white") +
geom_smooth(se = FALSE) +
geom_point() +
labs(title = "Cook's distance vs Leverage")
rp8 <- ggplot(m1, aes(.resid)) +
geom_histogram(bins = 7, color="darkblue", fill="steelblue")
grid.arrange(rp1, rp2, rp3, rp4, rp5, rp6, rp7, rp8, ncol = 2)
rp1 <- ggplot(m1, aes(.fitted, .resid)) +
geom_point() +
geom_hline(yintercept = 0) +
geom_smooth(se = FALSE) +
labs(title = "Residuals vs Fitted")
rp2 <- ggplot(m1, aes(.fitted, .stdresid)) +
geom_point() +
geom_hline(yintercept = 0) +
geom_smooth(se = FALSE)
rp3 <- ggplot(m1) +
stat_qq(aes(sample = .stdresid)) +
geom_abline()
rp4 <- ggplot(m1, aes(.fitted, sqrt(abs(.stdresid)))) +
geom_point() +
geom_smooth(se = FALSE) +
labs(title = "Scale-Location")
rp5 <- ggplot(m1, aes(seq_along(.cooksd), .cooksd)) +
geom_col() +
ylim(0, 0.0075) +
labs(title = "Cook's Distance")
rp6 <- ggplot(m1, aes(.hat, .stdresid)) +
geom_point(aes(size = .cooksd)) +
geom_smooth(se = FALSE, size = 0.5) +
labs(title = "Residuals vs Leverage")
rp7 <- ggplot(m1, aes(.hat, .cooksd)) +
geom_vline(xintercept = 0, colour = NA) +
geom_abline(slope = seq(0, 3, by = 0.5), colour = "white") +
geom_smooth(se = FALSE) +
geom_point() +
labs(title = "Cook's distance vs Leverage")
rp8 <- ggplot(m1, aes(.resid)) +
geom_histogram(bins = 7, color="darkblue", fill="steelblue")
cow_plot(rp1, rp2, rp3, rp4, rp5, rp6, rp7, rp8, ncol = 2)
rp1 <- ggplot(m1, aes(.fitted, .resid)) +
geom_point() +
geom_hline(yintercept = 0) +
geom_smooth(se = FALSE) +
labs(title = "Residuals vs Fitted")
rp2 <- ggplot(m1, aes(.fitted, .stdresid)) +
geom_point() +
geom_hline(yintercept = 0) +
geom_smooth(se = FALSE)
rp3 <- ggplot(m1) +
stat_qq(aes(sample = .stdresid)) +
geom_abline()
rp4 <- ggplot(m1, aes(.fitted, sqrt(abs(.stdresid)))) +
geom_point() +
geom_smooth(se = FALSE) +
labs(title = "Scale-Location")
rp5 <- ggplot(m1, aes(seq_along(.cooksd), .cooksd)) +
geom_col() +
ylim(0, 0.0075) +
labs(title = "Cook's Distance")
rp6 <- ggplot(m1, aes(.hat, .stdresid)) +
geom_point(aes(size = .cooksd)) +
geom_smooth(se = FALSE, size = 0.5) +
labs(title = "Residuals vs Leverage")
rp7 <- ggplot(m1, aes(.hat, .cooksd)) +
geom_vline(xintercept = 0, colour = NA) +
geom_abline(slope = seq(0, 3, by = 0.5), colour = "white") +
geom_smooth(se = FALSE) +
geom_point() +
labs(title = "Cook's distance vs Leverage")
rp8 <- ggplot(m1, aes(.resid)) +
geom_histogram(bins = 7, color="darkblue", fill="steelblue")
plot_grid(rp1, rp2, rp3, rp4, rp5, rp6, rp7, rp8, ncol = 2)
# levels(tf) <- union(levels(tf), levels(trf))
predict(m1, newdata = tf, type = "response")
str(predict(m1, newdata = tf, type = "response"))
# levels(tf) <- union(levels(tf), levels(trf))
preds <- predict(m1, newdata = tf, type = "response")
rdf <- data.frame(ID = 1:1431, Predicted = preds)
rdf
ms <- data.frame(summary(m1))
ms <- summary(data.frame(m1))
data.frame(summary(m1))
head(summary(m1))

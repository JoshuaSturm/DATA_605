# stat_function(fun = f1,
#               geom = "line",
#               aes(colour="f1")
#               ) +
# stat_function(fun = f2,
#               geom = "line",
#               aes(colour="f2")
#               )
stat_function(fun = funcShaded, geom = "polygon", fill = "grey", alpha = 0.2) +
stat_function(fun = f1, geom = "line", aes(colour = "f1")) +
stat_function(fun = f2, geom = "line", aes(colour = "f2"))
f1 <- function(x) {x^2 - 2*x - 2}
f2 <- function(x) {x + 2}
funcShaded <- function(x) {
y <- f1(x)
y[x < -1 | x > 4] <- NA
return(y)
}
ggplot(data.frame(x=c(-1, 4)), aes(x = x)) +
# stat_function(fun = f1,
#               geom = "line",
#               aes(colour="f1")
#               ) +
# stat_function(fun = f2,
#               geom = "line",
#               aes(colour="f2")
#               )
stat_function(fun = funcShaded, geom = "polygon", fill = "grey", alpha = 0.2) +
stat_function(fun = f1, geom = "line", aes(colour = "f1")) +
stat_function(fun = f2, geom = "line", aes(colour = "f2"))
f1 <- function(x) {x^2 - 2*x - 2}
f2 <- function(x) {x + 2}
funcShaded <- function(x) {
y <- f1(x)
y[x < -1 | x > 4] <- NA
return(y)
}
ggplot(data.frame(x=c(-1, 4)), aes(x = x)) +
# stat_function(fun = f1,
#               geom = "line",
#               aes(colour="f1")
#               ) +
# stat_function(fun = f2,
#               geom = "line",
#               aes(colour="f2")
#               )
stat_function(fun = funcShaded, geom = "polygon", fill = "grey", alpha = 0.4) +
stat_function(fun = f1, geom = "line", aes(colour = "f1")) +
stat_function(fun = f2, geom = "line", aes(colour = "f2"))
f1 <- function(x) {x^2 - 2*x - 2}
f2 <- function(x) {x + 2}
funcShaded <- function(x) {
y <- f1(x)
y[x < -1 | x > 4] <- NA
return(y)
}
ggplot(data.frame(x=c(-1, 4)), aes(x = x)) +
# stat_function(fun = f1,
#               geom = "line",
#               aes(colour="f1")
#               ) +
# stat_function(fun = f2,
#               geom = "line",
#               aes(colour="f2")
#               )
stat_function(fun = funcShaded, geom = "polygon", fill = "grey", alpha = 0.8) +
stat_function(fun = f1, geom = "line", aes(colour = "f1")) +
stat_function(fun = f2, geom = "line", aes(colour = "f2"))
f1 <- function(x) {x^2 - 2*x - 2}
f2 <- function(x) {x + 2}
funcShaded <- function(x) {
y <- f1(x)
y[x < -1 | x > 4] <- NA
return(y)
}
ggplot(data.frame(x=c(-1, 4)), aes(x = x)) +
# stat_function(fun = f1,
#               geom = "line",
#               aes(colour="f1")
#               ) +
# stat_function(fun = f2,
#               geom = "line",
#               aes(colour="f2")
#               )
stat_function(fun = funcShaded, geom = "polygon", fill = "grey", alpha = 0.7) +
stat_function(fun = f1, geom = "line", aes(colour = "f1")) +
stat_function(fun = f2, geom = "line", aes(colour = "f2"))
f1 <- function(x) {x^2 - 2*x - 2}
f2 <- function(x) {x + 2}
funcShaded <- function(x) {
y <- f1(x)
y[x < -1 | x > 4] <- NA
return(y)
}
ggplot(data.frame(x=c(-1, 4)), aes(x = x)) +
# stat_function(fun = f1,
#               geom = "line",
#               aes(colour="f1")
#               ) +
# stat_function(fun = f2,
#               geom = "line",
#               aes(colour="f2")
#               )
stat_function(fun = funcShaded, geom = "polygon", fill = "grey", alpha = 0.7) +
stat_function(fun = f1, geom = "line", aes(colour = "f1")) +
stat_function(fun = f2, geom = "line", aes(colour = "f2"))
install.packages(c("data.table", "stringi"))
?read.csv
knitr::opts_chunk$set(echo = F, warning = F, message = F, collapse = T)
data <- read.csv("C:\Users\Shua\Desktop\peu project\data\311_Service_Requests_from_2015.csv", na.strings = c("NA", ""))
data <- read.csv("C://Users//Shua//Desktop//peu project//data//311_Service_Requests_from_2015.csv", na.strings = c("NA", ""))
View(data)
library(tidyverse)
library(magrittr)
?copy
??copy
summary(data)
?select
data2 <- data %>%
select(Unique.Key, Created.Date, Closed.Date, Agency, Complaint.Type, Descriptor,
Location.Type, Incident.Zip, City, Status, Borough, Latitude, Longitude, Location) %>%
filter(is.na(Incident.Zip))
sum(is.na(data["Incident.zip"]))
sum(is.na(data[, "Incident.zip"]))
sum(is.na(data[, "Incident.Zip"]))
View(data2)
data2 <- data %>%
select(Unique.Key, Created.Date, Closed.Date, Agency, Complaint.Type, Descriptor,
Location.Type, Incident.Zip, City, Status, Borough, Latitude, Longitude, Location) %>%
filter(!is.na(Incident.Zip))
devtools::install_github('hadley/ggplot2')
shiny::runApp('C:/Users/Shua/Desktop/peu project/PEU_Project')
install.packages("stringi")
runApp('C:/Users/Shua/Desktop/peu project/PEU_Project')
install.packages("mapproj")
runApp('C:/Users/Shua/Desktop/peu project/PEU_Project')
runApp('C:/Users/Shua/Desktop/peu project/PEU_Project')
runApp('C:/Users/Shua/Desktop/peu project/PEU_Project')
runApp('C:/Users/Shua/Desktop/peu project/PEU_Project')
View(data2)
data <- read.csv("C://Users//Shua//Desktop//peu project//Cleaned_data.csv")
runApp('C:/Users/Shua/Desktop/peu project/PEU_Project')
data2 <- data %>%
select(Created.Date, Closed.Date, Agency, Complaint.Type, Descriptor,
Location.Type, Incident.Zip, City, Status, Borough, Latitude, Longitude, Location) %>%
filter(!is.na(Incident.Zip))
data2 %<>% mutate(Priority = if_else(Complaint.Type %in% c("HEAT/ HOT WATER", "UNSANITARY CONDITION",
"Water System", "Street Light Condition",
"PLUMBING", "WATER LEAK",
"Dirty Conditions", "Sanitation Condition",
"Sewer", "Electric",
"Rodent", "General Construction/Plumbing",
"Traffic Signal Condition", "Damaged Tree",
"Root/Sewer/Sidewalk Condition", "SAFETY",
"Elevator", "Air Quality",
"Construction", "Homeless Person Assistance",
"Indoor Air Quality", "Plumbing",
"Hazardous Materials", "Food Poisoning",
"Electrical", "Asbestos",
"Lead", "Water Quality",
"Indoor Sewage", "ELEVATOR",
"Elder Abuse", "Unsanitary Pigeon Condition",
"BEST/Site Safety", "Mold",
"Illegal Animal Kept as Pet", "Senior Center Complaint",
"Scaffold Safety", "Alzheimer's Care",
"Drinking Water", "Poision Ivy",
"Bridge Condition"), 1, 0))
# write.csv(data2, "Cleaned_data.csv")
View(data2)
k <- data2 %>% group_by(Incident.Zip, Priority)
hist(k)
k <- data2 %>% group_by(Incident.Zip, Priority) %>% hist()
k <- data2 %>% group_by(Incident.Zip, Priority) %>% hist(Complaint.Type)
k <- data2 %>% group_by(Incident.Zip, Priority) %>% hist(as.numeric(Complaint.Type))
k <- data2 %>% group_by(Incident.Zip, Priority) %>% plot(Complaint.Type)
k <- data2 %>% group_by(Incident.Zip, Priority) %>% plot(Complaint.Type)
k <- data2 %>% group_by(Incident.Zip, Priority) %>% barplot(Complaint.Type)
View(k)
names(k)
k <- data2 %>% group_by(Incident.Zip, Priority) %>% barplot(Complaint.Type)
k <- data2 %>% group_by(Incident.Zip, Priority, Complaint.Type) %>% barplot(Complaint.Type)
k <- data2 %>% group_by(Incident.Zip, Priority) %>% geom_bar()
k <- data2 %>% group_by(Incident.Zip, Priority) %>% barplot()
k <- data2 %>% group_by(Incident.Zip, Priority) %>% barplot(count())
k <- data2 %>% group_by(Incident.Zip, Priority) %>% barplot(count(Complaint.Type))
k <- data2 %>% group_by(Incident.Zip, Priority) %>% barplot(count(Agency))
k <- data2 %>% group_by(Incident.Zip, Priority) %>% barplot(count(., Agency))
k <- data2 %>% group_by(Incident.Zip, Priority) %>% barplot(count(.))
k <- data2 %>% group_by(Incident.Zip, Priority) %>% barplot(count(., Borough))
barplot(k$Borough)
plot(k$Agency)
k <- data2 %>% group_by(Incident.Zip, Priority) %>% barplot(count(.$Borough))
k <- data2 %>% group_by(Incident.Zip, Priority) %>% barplot(count(k$Borough))
k <- data2 %>% group_by(Incident.Zip, Priority) %>% barplot(k$Borough)
k <- data2 %>% group_by(Incident.Zip, Priority) %>% barplot(k$Agency)
k <- data2 %>% group_by(Incident.Zip, Priority) %>% summarize(n = sum(n))
k <- data2 %>% group_by(Incident.Zip, Priority) %>% summarize(n = n())
is_numeric("A")
is.numeric("A")
!is.numeric("A")
data2 <- data %>%
select(Created.Date, Closed.Date, Agency, Complaint.Type, Descriptor,
Location.Type, Incident.Zip, City, Status, Borough, Latitude, Longitude, Location) %>%
filter(!is.na(Incident.Zip), is.numeric(Incident.Zip))
data2 %<>% mutate(Priority = if_else(Complaint.Type %in% c("HEAT/ HOT WATER", "UNSANITARY CONDITION",
"Water System", "Street Light Condition",
"PLUMBING", "WATER LEAK",
"Dirty Conditions", "Sanitation Condition",
"Sewer", "Electric",
"Rodent", "General Construction/Plumbing",
"Traffic Signal Condition", "Damaged Tree",
"Root/Sewer/Sidewalk Condition", "SAFETY",
"Elevator", "Air Quality",
"Construction", "Homeless Person Assistance",
"Indoor Air Quality", "Plumbing",
"Hazardous Materials", "Food Poisoning",
"Electrical", "Asbestos",
"Lead", "Water Quality",
"Indoor Sewage", "ELEVATOR",
"Elder Abuse", "Unsanitary Pigeon Condition",
"BEST/Site Safety", "Mold",
"Illegal Animal Kept as Pet", "Senior Center Complaint",
"Scaffold Safety", "Alzheimer's Care",
"Drinking Water", "Poision Ivy",
"Bridge Condition"), 1, 0))
# write.csv(data2, "Cleaned_data.csv")
k <- data2
k <- data2 %>% group_by(Incident.Zip, Priority) %>% summarize(n = n())
data2 <- data %>%
select(Created.Date, Closed.Date, Agency, Complaint.Type, Descriptor,
Location.Type, Incident.Zip, City, Status, Borough, Latitude, Longitude, Location) %>%
filter(!is.na(Incident.Zip) & is.numeric(Incident.Zip))
data %>% filter(is.numeric(Incident.Zip))
data2 <- data %>%
select(Created.Date, Closed.Date, Agency, Complaint.Type, Descriptor,
Location.Type, Incident.Zip, City, Status, Borough, Latitude, Longitude, Location) %>%
filter(!is.na(as.numeric(as.character(Incident.Zip))))
data2 %<>% mutate(Priority = if_else(Complaint.Type %in% c("HEAT/ HOT WATER", "UNSANITARY CONDITION",
"Water System", "Street Light Condition",
"PLUMBING", "WATER LEAK",
"Dirty Conditions", "Sanitation Condition",
"Sewer", "Electric",
"Rodent", "General Construction/Plumbing",
"Traffic Signal Condition", "Damaged Tree",
"Root/Sewer/Sidewalk Condition", "SAFETY",
"Elevator", "Air Quality",
"Construction", "Homeless Person Assistance",
"Indoor Air Quality", "Plumbing",
"Hazardous Materials", "Food Poisoning",
"Electrical", "Asbestos",
"Lead", "Water Quality",
"Indoor Sewage", "ELEVATOR",
"Elder Abuse", "Unsanitary Pigeon Condition",
"BEST/Site Safety", "Mold",
"Illegal Animal Kept as Pet", "Senior Center Complaint",
"Scaffold Safety", "Alzheimer's Care",
"Drinking Water", "Poision Ivy",
"Bridge Condition"), 1, 0))
# write.csv(data2, "Cleaned_data.csv")
k <- data2 %>% group_by(Incident.Zip, Priority) %>% summarize(n = n())
View(k)
k <- data2 %>% group_by(Incident.Zip, Agency) %>% summarize(n = n())
k <- data2 %>% group_by(Incident.Zip, Agency) %>% summarize(n = n()) %>% group_by(Incident.Zip)
View(k)
write.csv(data2, "Cleaned_data.csv")
barplot(k)
barplot(k$n)
hist(k$n)
k[1]
k[1,]
k[1,]...length()
k[1,].length()
k[1],
k[10,]
k[10,1]
k[10,1].length
length(k[10,1])
length(k[[10,1]])
install.packages("googleVis")
library(googleVis)
View(k)
View(data2)
gvisGeoChart(data2, Incident.Zip)
gvisGeoChart(data2, data2$Incident.Zip)
install.packages("leaflet")
View(k)
gvisGeoChart(k, "NYC")
k <- data2 %>% group_by(Incident.Zip, Priority) %>% tally()
library(tidyverse)
library(magrittr)
library(plotly)
k <- data2 %>% group_by(Incident.Zip, Priority) %>% tally()
View(k)
library(googleVis)
k <- data2 %>% group_by(Incident.Zip, Priority) %>% tally()
gvisGeoChart(k, "NYC")
library(tidyverse)
library(magrittr)
library(plotly)
library(broom)
library(sf)
url <- "http://data.beta.nyc//dataset/3bf5fb73-edb5-4b05-bb29-7c95f4a727fc/resource/6df127b1-6d04-4bb7-b983-07402a2c3f90/download/f4129d9aa6dd4281bc98d0f701629b76nyczipcodetabulationareas.geojson"
sf <- read_sf(url)
knitr::opts_chunk$set(echo = F, warning = F, message = F, collapse = T, cache = T)
library(tidyverse)
library(magrittr)
library(knitr)
library(corrplot)
library(kableExtra)
install.packages(c("callr", "stringi", "stringr"))
knitr::opts_chunk$set(echo = F, warning = F, message = F, collapse = T, cache = T)
library(tidyverse)
library(magrittr)
library(knitr)
library(corrplot)
library(kableExtra)
wine.training <- read.csv("./data/wine-training-data.csv", na.strings = "")
setwd("~/GitHub/DATA_621/Homework 5")
setwd("~/GitHub/DATA_621/Homework 5")
wine.training <- read.csv("./data/wine-training-data.csv", na.strings = "")
wine.eval <- read.csv("./data/wine-evaluation-data.csv", na.strings = "")
names(wine.training)
?read.csv
library(data.table)
crime.training <- read.csv("crime-training-data_modified.csv", stringsAsFactors = F)
library(data.table)
wine.eval <- read.csv("./data/wine-evaluation-data.csv", na.strings = "")
wine.eval <- fread("./data/wine-evaluation-data.csv", na.strings = "")
wine.eval <- fread("./data/wine-evaluation-data.csv", na.strings = "")
# wine.training <- read.csv("./data/wine-training-data.csv", na.strings = "")
# wine.eval <- read.csv("./data/wine-evaluation-data.csv", na.strings = "")
wine.training <- fread("./data/wine-training-data.csv", na.strings = "")
View(wine.eval)
?fread
View(wine.training)
View(wine.training)
View(wine.eval)
names(wine.eval)
wine.eval <- fread("./data/wine-evaluation-data.csv", na.strings = "", drop = INDEX)
# wine.training <- read.csv("./data/wine-training-data.csv", na.strings = "")
# wine.eval <- read.csv("./data/wine-evaluation-data.csv", na.strings = "")
wine.training <- fread("./data/wine-training-data.csv", na.strings = "", drop = c(INDEX))
# wine.training <- read.csv("./data/wine-training-data.csv", na.strings = "")
# wine.eval <- read.csv("./data/wine-evaluation-data.csv", na.strings = "")
wine.training <- fread("./data/wine-training-data.csv", na.strings = "", drop = c("INDEX""))
# wine.training <- read.csv("./data/wine-training-data.csv", na.strings = "")
# wine.eval <- read.csv("./data/wine-evaluation-data.csv", na.strings = "")
wine.training <- fread("./data/wine-training-data.csv", na.strings = "", drop = "INDEX")
View(wine.training)
wine.eval <- fread("./data/wine-evaluation-data.csv", na.strings = "", drop = "INDEX")
names(wine.training)
wine.training <- read_csv("./data/wine-training-data.csv", na.strings = "")
wine.eval <- read_csv("./data/wine-evaluation-data.csv", na.strings = "")
wine.training <- read_csv("./data/wine-training-data.csv", na = "")
wine.eval <- read_csv("./data/wine-evaluation-data.csv", na= "")
class(wine.training)
typeof(wine.training)
View(wine.training)
rm(wine.eval, wine.training)
wine.t <- read_csv("./data/wine-training-data.csv", na = "")
wine.e <- read_csv("./data/wine-evaluation-data.csv", na= "")
View(wine.t)
View(wine.t)
?read_csv
wine.t <- read_csv("./data/wine-training-data.csv", na = "", col_skip("INDEX"))
wine.e <- read_csv("./data/wine-evaluation-data.csv", na= "", col_skip("INDEX"))
wine.t <- read_csv("./data/wine-training-data.csv", na = "", col_skip(INDEX))
wine.e <- read_csv("./data/wine-evaluation-data.csv", na= "", col_skip(INDEX))
wine.t <- read_csv("./data/wine-training-data.csv", na = "", col_skip = "INDEX")
wine.e <- read_csv("./data/wine-evaluation-data.csv", na= "", col_skip = "INDEX")
wine.t <- read_csv("./data/wine-training-data.csv", na = "", col_types = cols(INDEX = col_skip()))
wine.e <- read_csv("./data/wine-evaluation-data.csv", na= "", col_types = cols(INDEX = col_skip()))
View(wine.t)
devtools::install_github("hadley/tidyverse")
wine.t <- read_csv("./data/wine-training-data.csv", na = "", col_types = cols(INDEX = col_skip()))
wine.e <- read_csv("./data/wine-evaluation-data.csv", na= "", col_types = cols(INDEX = col_skip()))
View(wine.t)
wine.t <- wine.t[, c(names(wine.t)[1], sort(names(ins.training)[2:15]))]
wine.t <- wine.t[, c(names(wine.t)[1], sort(names(wine.t)[2:15]))]
View(wine.t)
wine.e <- wine.e[, c(names(wine.e)[1], sort(names(wine.e)[2:15]))]
View(wine.e)
defs <- c("Number of Cases Purchased",
"Proprietary method of testing total acidity of wine by using a weighted average",
"Alcohol Content",
"Chloride content of wine",
"Citric Acid Content",
"Density of Wine",
"Fixed Acidity of Wine",
"Sulfur Dioxide content of wine",
"Marketing Score indicating the appeal of label design for consumers. High numbers suggest customers like the label design. Negative numbers suggest customes don't like the design",
"Residual Sugar of wine",
"Wine rating by a team of experts. 4 Stars = Excellent, 1 Star = Poor",
"Sulfate conten of wine",
"Total Sulfur Dioxide of Wine",
"Volatile Acid content of wine",
"pH of wine")
wine.t <- wine.t[, c(names(wine.t)[1], sort(names(wine.t)[2:15]))]
wine.e <- wine.e[, c(names(wine.e)[1], sort(names(wine.e)[2:15]))]
wine.dict <- data.frame(names(wine.t), defs)
names(wine.dict) <- c("Variable Name", "Definition")
kable(wine.dict, format = "latex", booktabs = T) %>%
kable_styling(latex_options = c("striped", "scale_down"))
defs <- c("Number of Cases Purchased",
"Proprietary method of testing total acidity of wine by using a weighted average",
"Alcohol Content",
"Chloride content of wine",
"Citric Acid Content",
"Density of Wine",
"Fixed Acidity of Wine",
"Sulfur Dioxide content of wine",
"Marketing Score indicating the appeal of label design for consumers. High numbers suggest customers like the label design. Negative numbers suggest customers don't like the design",
"pH of wine",
"Residual Sugar of wine",
"Wine rating by a team of experts. 4 Stars = Excellent, 1 Star = Poor",
"Sulfate conten of wine",
"Total Sulfur Dioxide of Wine",
"Volatile Acid content of wine"
)
wine.t <- wine.t[, c(names(wine.t)[1], sort(names(wine.t)[2:15]))]
wine.e <- wine.e[, c(names(wine.e)[1], sort(names(wine.e)[2:15]))]
wine.dict <- data.frame(names(wine.t), defs)
names(wine.dict) <- c("Variable Name", "Definition")
kable(wine.dict, format = "latex", booktabs = T) %>%
kable_styling(latex_options = c("striped", "scale_down"))
kable(psych::describe(wine.t), format = "latex", booktabs = T) %>%
kable_styling(latex_options = c("striped", "scale_down"))
mapply(is.na, wine.t)
mapply(sum(is.na), wine.t)
mapply(sum(is.na()), wine.t)
sum(is.na(wine.t))
ls()
object.size(defs)
object.size(wine.t)
memory.size()
gc()
memory.size()
memory.size()
knitr::opts_chunk$set(echo = F, warning = F, message = F, collapse = T, cache = T)
setwd("~/GitHub/DATA_605/Assignment 15")
gc()
memory.size()
x <- c(5.6, 6.3, 7, 7.7, 8.4)
y <- c(8.8, 12.4, 14.8, 18.2, 20.8)
lm(y ~ x)
knitr::opts_chunk$set(echo = T, warning = F, message = F, collapse = T, cache = T)
setwd("~/GitHub/DATA_605/Assignment 15")
plot(lm(y ~ x))
ggplot() +
geom_point(aes(x, y))
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
library(tidyverse)
library(tidyverse)
ggplot() +
geom_point(aes(x, y))
ggplot() +
geom_point(aes(x, y)) +
geom_line(lm(y ~ x))
ggplot() +
geom_point(aes(x, y)) +
geom_line(aes(lm(y ~ x)))
ggplot() +
geom_point(aes(x, y)) +
geom_line(aes(lm(y ~ x)))#
geom_smooth(method = "lm")
ggplot() +
geom_point(aes(x, y)) +
geom_line(aes(lm(y ~ x)))#
geom_smooth(method = "lm", se = F)
ggplot() +
geom_point(aes(x, y)) +
#geom_line(aes(lm(y ~ x)))
geom_smooth(method = "lm", se = T)
ggplot() +
geom_point(aes(x, y)) +
#geom_line(aes(lm(y ~ x)))
geom_smooth(method = "lm", se = F)
ggplot() +
geom_point(aes(x, y)) +
#geom_line(aes(lm(y ~ x)))
geom_line(method = "lm", se = F)
ggplot(aes(x, y)) +
geom_point() +
#geom_line(aes(lm(y ~ x)))
geom_smooth(method = "lm", se = F)
ggplot(aes(x, y)) +
geom_point() +
#geom_line(aes(lm(y ~ x)))
geom_smooth(method = "lm")
ggplot(data.frame(x,y), aes(x, y)) +
geom_point() +
#geom_line(aes(lm(y ~ x)))
geom_smooth(method = "lm")
ggplot(data.frame(x,y), aes(x, y)) +
geom_point() +
#geom_line(aes(lm(y ~ x)))
geom_smooth(method = "lm", se = F)
ggplot(data.frame(x,y), aes(x, y)) +
geom_point() +
#geom_line(aes(lm(y ~ x)))
geom_smooth(method = "lm")
4*24
96/24
(81 - 21*(2.30) + 17*(4.10))*2.30 + (40 + 11*(2.30) - 23*(4.10))*4.10
warnings()
exp5
exp(5)
(1/24)*((exp(32) - exp(16))*(exp(12) - exp(6)))

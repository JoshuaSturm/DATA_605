mapply(function(x) round(x, 2), c(c1, c2, c3))
c1 <- c(model1$aic, BIC(model1), model1$null.deviance - model1$deviance, pred_acc(m1df), pred_err(m1df), pred_prec(m1df), pred_sens(m1df), pred_spec(m1df), pred_f1(m1df), roc_curve(m1df)[[2]])
c2 <- c(model2$aic, BIC(model2), model2$null.deviance - model2$deviance, pred_acc(m2df), pred_err(m2df), pred_prec(m2df), pred_sens(m2df), pred_spec(m2df), pred_f1(m2df), roc_curve(m2df)[[2]])
c3 <- c(model3$aic, BIC(model3), model3$null.deviance - model3$deviance, pred_acc(m3df), pred_err(m3df), pred_prec(m3df), pred_sens(m3df), pred_spec(m3df), pred_f1(m3df), roc_curve(m3df)[[2]])
rnames <- c("AIC", "BIC", "Deviance Diff", "Accuracy", "Error Rate", "Precision", "Sensitivity", "Specificity", "F1 Score", "AUC")
mapply(function(x) round(x, 2), c(c1, c2, c3))
c2
mapply(function(x) round(x, 2), c(c1, c2, c3))
c1
c(c1,c2,c3)
kable(cbind(rnames, mapply(function(x) round(x, 2), c(c1, c2, c3))), format = "html", booktabs = T, col.names = c("Metric", "Model 1", "Model 2", "Model 3"))# %>%
#kable_styling(latex_options = c("striped"))
test <- mapply(function(x) round(x, 2), c(c1, c2, c3))
test
c1
x2
c2
cbind(rnames, test)
rbind(rnames, test)
test
c1
c2
?do.call
test <- do.call(function(x) round(x, 2), c(c1, c2, c3))
test <- do.call(function(x) round(x, 2), list(c(c1, c2, c3)))
test
rm(test)
rounded <- mapply(function(x) round(x, 2), c(c1, c2, c3))
rounded[1:10]
rounded <- mapply(function(x) round(x, 4), c(c1, c2, c3))
rounded[1:10]
roc_curve(m1df)[[2]]
View(crime.dict)
hist(crime.training$rad)
table(crime.training$rad)
table(crime.training$ptratio)
summary(crime.training)
cor(crime.training$rad, crime.training$tax)
cor(crime.training$target, crime.training$tax)
cor(crime.training$tax, crime.training$target)
View(crime.training)
View(crime.training.copy)
c1
rounded
rounded <- mapply(function(x) round(x, 4), c(c1, c2, c3))
kable(cbind(rnames, rounded[1:10], rounded[11:20], rounded[21:30]), format = "latex", booktabs = T, col.names = c("Metric", "Model 1", "Model 2", "Model 3")) %>%
kable_styling(latex_options = c("striped"))
install.packages(c("callr", "caret", "ddalpha", "forecast", "glmnet", "kableExtra", "lmtest", "lubridate", "maps", "network", "selectr", "XLConnect", "XLConnectJars"))
install.packages("quantmod")
setwd("~/GitHub/DATA_605/Discussion 11")
setwd("~/GitHub/DATA_605/Discussion 11")
load("~/GitHub/DATA_605/Discussion 11/.RData")
library(tidyverse)
library(knitr)
library(corrplot)
?lm
m1 <- lm(formula = charges ~ .,
data = ins)
summary(m1)
apply(ins, typeof)
apply(ins, typeof())
apply(ins, FUN = typeof)
apply(ins, 2, FUN = typeof)
apply(ins, 1, FUN = typeof)
apply(ins, 2, FUN = typeof)
apply(ins, 2, FUN = class)
str(ins)
m1 <- lm(formula = charges ~ .,
data = ins)
summary(m1)
m2 <- lm(formula = charges ~ . -sexmale -regionnorthwest,
data = ins)
summary(m2)
m2 <- lm(formula = charges ~ . -sexmale -regionnorthwest,
data = ins)
m2 <- lm(formula = charges ~ . -regionnorthwest,
data = ins)
m2 <- lm(formula = charges ~ . -sex -region,
data = ins)
summary(m2)
anova(m1)
anova(m2)
anova(summary(m2))
anova(m1, m2)
anova(m2, m1)
?anova
plot(m1)
plot(m1)
plot(m2)
drop1(m1,~.,test="F")
drop1(m2,~.,test="F")
summary(m1, m2)
summary(m1)
summary(m2)
anova(m1,m2)
anova(m2,m1)
View(ins.dict)
m3 <- ins %>%
mutate(overweight = if_else(bmi > 5, 1, 0))
View(m3)
table(ins$bmi)
m3 <- ins %>%
mutate(overweight = if_else(bmi > 24.9, 1, 0))
View(m3)
m3 <- ins %>%
mutate(overweight = if_else(bmi > 24.9, 1, 0)) %>%
select(-bmi)
m3 <- lm(formula = charges ~ .,
data = m3)
summary(m3)
m3 <- ins %>%
mutate(overweight = if_else(bmi > 24.9, 1, 0)) %>%
select(-c(bmi, region, sex))
m3 <- lm(formula = charges ~ .,
data = m3)
summary(m3)
anova(m3, m1)
anova(m3, m2)
anova(m2, m3)
anova(m1, m3)
anova(m3, m1)
anova(m1)
anova(m3)
anova(m3, m1)
ins <- read.csv("insurance.csv")
ins$sex <- as.factor(ins$sex)
ins$smoker <- as.factor(ins$smoker)
ins$region <- as.factor(ins$region)
m3 <- ins %>%
mutate(overweight = if_else(bmi > 24.9, 1, 0)) %>%
select(-c(bmi, region, sex))
m3 <- lm(formula = charges ~ .,
data = m3)
summary(m3)
m2 <- lm(formula = charges ~ . -sex -region,
data = ins)
summary(m2)
m1 <- lm(formula = charges ~ .,
data = ins)
summary(m1)
ins <- read.csv("insurance.csv")
?anova
anova(m3, m1, test = "Chisq")
predict(m1, ins)
AIC(m1,m2,3)
AIC(m1,m2,m3)
m3 <- ins %>%
mutate(overweight = if_else(bmi > 24.9, 1, 0)) %>%
select(-c(bmi))
m3 <- lm(formula = charges ~ .,
data = m3)
summary(m3)
anova(m3, m1)
AIC(m1,m2,m3)
m3 <- ins %>%
mutate(overweight = if_else(bmi > 24.9, 1, 0)) %>%
select(-c(bmi, region, sex))
m3 <- lm(formula = charges ~ .,
data = m3)
summary(m3)
anova(m3, m1)
m3 <- ins %>%
mutate(overweight = if_else(bmi > 24.9, 1, 0)) %>%
select(-c(bmi, region, sex))
m3 <- lm(formula = charges ~ .,
data = m3)
summary(m3)
anova(m3, m1)
AIC(m1,m2,m3)
BIC(m1,m2,m3)
m3 <- ins %>%
mutate(overweight = if_else(bmi > 24.9, 1, 0)) %>%
select(-c(bmi, region, sex))
m3 <- lm(formula = charges ~ .,
data = m3)
summary(m3)
anova(m3, m1)
BIC(m1,m2,m3)
m3 <- ins %>%
mutate(overweight = if_else(bmi > 24.9, 1, 0)) %>%
select(-c(bmi))
m3 <- lm(formula = charges ~ .,
data = m3)
summary(m3)
anova(m3, m1)
BIC(m1,m2,m3)
train <- ins %>%
sample_frac(., size = 0.7, replace = F)
View(train)
?anti_join
test <- anti_join(ins, train)
View(test)
train <- ins %>%
sample_frac(., size = 0.7, replace = F)
test <- anti_join(ins, train) %>%
select(-charges)
lm(charges ~ ., train)
k <- lm(charges ~ ., train)
summary(k)
set.seed(858)
# Split data into training and testing partitions
train <- ins %>%
sample_frac(., size = 0.7, replace = F)
test <- anti_join(ins, train) %>%
select(-charges)
?union
intersect(test, train)
test <- anti_join(ins, train)
intersect(test, train)
union(test, train)
model1 <- lm(formula = charges ~ .,
data = train)
predicted.charges <- predict(object = model1, newdata = test, type = "response")
summary(predicted.charges)
set.seed(858)
# Split data into training and testing partitions
train <- ins %>%
sample_frac(., size = 0.7, replace = F)
test <- anti_join(ins, train)
model1 <- lm(formula = charges ~ .,
data = train)
predicted.charges <- predict(object = model1, newdata = test, type = "response")
results.df <- data.frame(cbind(actuals = test$charges, predicted = predicted.charges))
results.df <- results.df %>%
mutate(error = results.df$predicted - results.df$actuals) %>%
mutate(percerror = paste0(round(results.df$error/results.df$actuals*100,2),"%"))
kable(head(results.df))
results.df <- results.df %>%
mutate(error = results.df$predicted - results.df$actuals) %>%
mutate(percerror = paste0(round(results.df$error/results.df$actuals*100,2),"%"))
kable(head(results.df))
results.df <- data.frame(cbind(actuals = test$charges, predicted = predicted.charges))
results.df <- results.df %>%
mutate(error = results.df$predicted - results.df$actuals) %>%
mutate(percerror = paste0(round(results.df$error/results.df$actuals*100,2),"%"))
kable(head(results.df))
?paste0
results.df <- results.df %>%
mutate(percerror = paste0(results.df$error/results.df$actuals*100,"%")) %>%
apply(., 1, round(2))
results.df <- data.frame(cbind(actuals = test$charges, predicted = predicted.charges))
results.df <- results.df %>%
mutate(error = results.df$predicted - results.df$actuals)
results.df <- results.df %>%
mutate(percerror = paste0(results.df$error/results.df$actuals*100,"%")) %>%
apply(., 1, function(x) round(x, 2))
kable(head(results.df))
results.df <- data.frame(cbind(actuals = test$charges, predicted = predicted.charges))
results.df <- results.df %>%
mutate(error = results.df$predicted - results.df$actuals)
results.df <- results.df %>%
mutate(percerror = paste0(results.df$error/results.df$actuals*100,"%")) %>%
apply(., 2, function(x) round(x, 2))
kable(head(results.df))
?apply
results.df <- data.frame(cbind(actuals = test$charges, predicted = predicted.charges))
results.df <- results.df %>%
mutate(error = results.df$predicted - results.df$actuals)
results.df <- results.df %>%
mutate(percerror = paste0(results.df$error/results.df$actuals*100,"%")) %>%
apply(., 2, FUN = function(x) round(x, 2))
kable(head(results.df))
results.df <- data.frame(cbind(actuals = test$charges, predicted = predicted.charges))
results.df <- results.df %>%
mutate(error = results.df$predicted - results.df$actuals)
results.df <- results.df %>%
mutate(percerror = paste0(results.df$error/results.df$actuals*100,"%")) %>%
apply(., 1, FUN = function(x) round(x, 2))
kable(head(results.df))
results.df <- results.df %>%
mutate(percerror = paste0(results.df$error/results.df$actuals*100,"%")) %>%
apply(1, FUN = function(x) round(x, 2))
results.df <- data.frame(cbind(actuals = test$charges, predicted = predicted.charges))
results.df <- results.df %>%
mutate(error = results.df$predicted - results.df$actuals)
results.df <- results.df %>%
mutate(percerror = paste0(results.df$error/results.df$actuals*100,"%")) %>%
apply(1, FUN = function(x) round(x, 2))
kable(head(results.df))
?vapply
results.df <- data.frame(cbind(actuals = test$charges, predicted = predicted.charges))
results.df <- results.df %>%
mutate(error = results.df$predicted - results.df$actuals)
results.df <- results.df %>%
mutate(percerror = paste0(results.df$error/results.df$actuals*100,"%")) %>%
vapply(., function(x) round(x, 2))
kable(head(results.df))
results.df <- data.frame(cbind(actuals = test$charges, predicted = predicted.charges))
results.df <- results.df %>%
mutate(error = results.df$predicted - results.df$actuals)
results.df <- results.df %>%
mutate(percerror = paste0(results.df$error/results.df$actuals*100,"%")) %>%
vapply(., function(x) round(x, 2), .)
kable(head(results.df))
results.df <- data.frame(cbind(actuals = test$charges, predicted = predicted.charges))
results.df <- results.df %>%
mutate(error = results.df$predicted - results.df$actuals)
results.df <- results.df %>%
mutate(percerror = paste0(results.df$error/results.df$actuals*100,"%")) %>%
vapply(., function(x) round(x, 2), results.df)
kable(head(results.df))
vapply(results.df, function(x) round(x, 2))
vapply(results.df, function(x) round(x, 2), results.df)
sapply(results.df, function(x) round(x, 2))
results.df <- data.frame(cbind(actuals = test$charges, predicted = predicted.charges))
results.df <- results.df %>%
mutate(error = results.df$predicted - results.df$actuals)
results.df <- results.df %>%
mutate(percerror = paste0(results.df$error/results.df$actuals*100,"%")) %>%
sapply(., function(x) round(x, 2))
kable(head(results.df))
results.df <- data.frame(cbind(actuals = test$charges, predicted = predicted.charges))
results.df <- results.df %>%
mutate(error = results.df$predicted - results.df$actuals)
results.df <- results.df %>%
mutate(percerror = paste0(results.df$error/results.df$actuals*100,"%")) %>%
sapply(function(x) round(x, 2))
kable(head(results.df))
head(results.df)
results.df <- sapply(results.df, function(x) round(x, 2))
head(results.df)
results.df <- data.frame(cbind(actuals = test$charges, predicted = predicted.charges))
results.df <- results.df %>%
mutate(error = results.df$predicted - results.df$actuals)
results.df <- results.df %>%
mutate(percerror = paste0(results.df$error/results.df$actuals*100,"%"))
results.df %>% sapply(., function(x) round(x, 2))
kable(head(results.df))
results.df <- results.df %>%
mutate(percerror = paste0(results.df$error/results.df$actuals*100,"%"))
results.df %>% sapply(., function(x) round(x, 2))
results.df <- data.frame(cbind(actuals = test$charges, predicted = predicted.charges))
results.df <- results.df %>%
mutate(error = results.df$predicted - results.df$actuals)
results.df <- results.df %>%
mutate(percerror = paste0(results.df$error/results.df$actuals*100,"%"))
results.df <- sapply(results.df, function(x) round(x, 2))
kable(head(results.df))
results.df <- data.frame(cbind(actuals = test$charges, predicted = predicted.charges))
results.df <- results.df %>%
mutate(error = results.df$predicted - results.df$actuals)
results.df <- results.df %>%
mutate(percerror = paste0(results.df$error/results.df$actuals*100,"%"))
results.df <- lapply(results.df, function(x) round(x, 2))
kable(head(results.df))
results.df <- sapply(results.df, function(x) round(x, 2))
results.df <- data.frame(cbind(actuals = test$charges, predicted = predicted.charges))
results.df <- results.df %>%
mutate(error = results.df$predicted - results.df$actuals)
results.df <- results.df %>%
mutate(percerror = paste0(results.df$error/results.df$actuals*100,"%"))
results.df <- sapply(results.df, function(x) round(x, 2))
results.df <- sapply(results.df, function(x) round(x, 2))
results.df <- sapply(results.df, function(x) round(x, 2))
sapply(results.df, function(x) round(x, 2))
results.df <- data.frame(cbind(actuals = test$charges, predicted = predicted.charges))
results.df <- results.df %>%
mutate(error = results.df$predicted - results.df$actuals)
results.df <- results.df %>%
mutate(percerror = paste0(results.df$error/results.df$actuals*100,"%"))
sapply(results.df, function(x) round(x, 2))
lapply(results.df, function(x) round(x, 2))
results.df <- data.frame(cbind(actuals = test$charges, predicted = predicted.charges))
View(results.df)
results.df <- results.df %>%
mutate(error = results.df$predicted - results.df$actuals)
results.df <- results.df %>%
mutate(percerror = paste0(results.df$error/results.df$actuals*100,"%"))
head(sapply(results.df, function(x) round(x,2)))
head(lapply(results.df, function(x) round(x,2)))
head(apply(results.df, function(x) round(x,2)))
head(mapply(function(x) round(x, 2), results.df))
head(mapply(function(x) round(x,2), results.df))
results.df <- round(results.df, 2)
mutate(percerror = paste0(round(results.df$error/results.df$actuals*100,"%"), 2)
results.df <- data.frame(cbind(actuals = test$charges, predicted = predicted.charges))
results.df <- results.df %>%
mutate(error = results.df$predicted - results.df$actuals)
results.df <- results.df %>%
mutate(percerror = paste0(round(results.df$error/results.df$actuals*100,"%"), 2)
results.df <- round(results.df, 2)
kable(head(results.df))
results.df <- data.frame(cbind(actuals = test$charges, predicted = predicted.charges))
results.df <- results.df %>%
mutate(error = results.df$predicted - results.df$actuals)
results.df <- results.df %>%
mutate(percerror = paste0(round(results.df$error/results.df$actuals*100,"%"), 2))
results.df <- round(results.df, 2)
kable(head(results.df))
results.df <- data.frame(cbind(actuals = test$charges, predicted = predicted.charges))
results.df <- results.df %>%
mutate(error = results.df$predicted - results.df$actuals)
results.df <- results.df %>%
mutate(percerror = paste0(round(results.df$error/results.df$actuals*100,"%"), 2))
results.df <- round(results.df[, -3], 2)
kable(head(results.df))
results.df <- data.frame(cbind(actuals = test$charges, predicted = predicted.charges))
results.df <- results.df %>%
mutate(error = results.df$predicted - results.df$actuals)
results.df <- results.df %>%
mutate(percerror = paste0(round(results.df$error/results.df$actuals*100,"%"), 2))
results.df <- round(results.df[1:2], 2)
kable(head(results.df))
results.df <- data.frame(cbind(actuals = test$charges, predicted = predicted.charges))
results.df <- results.df %>%
mutate(error = results.df$predicted - results.df$actuals)
results.df <- results.df %>%
mutate(percerror = paste0(round(results.df$error/results.df$actuals*100,"%"), 2))
results.df <- round(results.df[, c(1,2)], 2)
kable(head(results.df))
results.df <- data.frame(cbind(actuals = test$charges, predicted = predicted.charges))
results.df <- results.df %>%
mutate(error = results.df$predicted - results.df$actuals)
results.df <- results.df %>%
mutate(percerror = paste0(round(results.df$error/results.df$actuals*100,"%"), 2))
results.df <- data.frame(cbind(actuals = test$charges, predicted = predicted.charges))
results.df <- results.df %>%
mutate(error = results.df$predicted - results.df$actuals)
results.df <- results.df %>%
mutate(percerror = paste0(round(results.df$error/results.df$actuals*100,2),"%"))
results.df <- round(results.df[, -3], 2)
kable(head(results.df))
results.df <- data.frame(cbind(actuals = test$charges, predicted = predicted.charges))
results.df <- results.df %>%
mutate(error = results.df$predicted - results.df$actuals)
results.df <- results.df %>%
mutate(percerror = paste0(round(results.df$error/results.df$actuals*100,2),"%"))
results.df <- round(results.df[, -3], 2)
kable(head(results.df))
sprintf("The mean error is: %s", mean(results.df$error))
sprintf("The mean percent error is: %s", mean(results.df$percerror))
sprintf("The mean percent error is: %s", mean(results.df$error/results.df$actuals*100))
sprintf("The mean percent error is: %s %", mean(results.df$error/results.df$actuals*100))
sprintf("The mean percent error is: %s /%", mean(results.df$error/results.df$actuals*100))
sprintf("The mean percent error is: %s \%", mean(results.df$error/results.df$actuals*100))
sprintf("The mean percent error is: %s" %, mean(results.df$error/results.df$actuals*100))
sprintf("The mean percent error is: %s %%", mean(results.df$error/results.df$actuals*100))
sprintf("The mean percent error is: %s%%", mean(results.df$error/results.df$actuals*100))
sprintf("The mean percent error is: %s%%", round(mean(results.df$error/results.df$actuals*100), 2))
rp1 <- ggplot(model1, aes(.fitted, .resid)) +
geom_point() +
geom_hline(yintercept = 0) +
geom_smooth(se = FALSE) +
labs(title = "Residuals vs Fitted")
rp2 <- ggplot(model1, aes(.fitted, .stdresid)) +
geom_point() +
geom_hline(yintercept = 0) +
geom_smooth(se = FALSE)
rp3 <- plot(model1, which = 2)
rp4 <- ggplot(model1, aes(.fitted, sqrt(abs(.stdresid)))) +
geom_point() +
geom_smooth(se = FALSE) +
labs(title = "Scale-Location")
rp5 <- ggplot(model1, aes(seq_along(.cooksd), .cooksd)) +
geom_col() +
ylim(0, 0.0075) +
labs(title = "Cook's Distance")
rp6 <- ggplot(model1, aes(.hat, .stdresid)) +
geom_point(aes(size = .cooksd)) +
geom_smooth(se = FALSE, size = 0.5) +
labs(title = "Residuals vs Leverage")
rp7 <- ggplot(model1, aes(.hat, .cooksd)) +
geom_vline(xintercept = 0, colour = NA) +
geom_abline(slope = seq(0, 3, by = 0.5), colour = "white") +
geom_smooth(se = FALSE) +
geom_point() +
labs(title = "Cook's distance vs Leverage")
rp2
grid.arrange(rp1, rp2, rp4, rp5, rp6, rp7, ncol = 2)
ggplot(predicted.charges, aes(x = residuals)) + geom_histogram(bins = 7) +
ggtitle("Histogram of residuals")
results.df <- data.frame(cbind(actuals = test$charges, predicted = predicted.charges))
results.df <- results.df %>%
mutate(error = results.df$actuals - results.df$predicted) %>%
round(., 2)
results.df <- results.df %>%
mutate(percerror = paste0(round(results.df$error/results.df$actuals*100,2),"%"))
kable(head(results.df))
sprintf("The mean percent error is: %s%%", round(mean(results.df$error/results.df$actuals*100), 2))
ggplot(results.df, aes(x = error)) + geom_histogram(bins = 7) +
ggtitle("Histogram of residuals")
ggplot(results.df, aes(x = error)) + geom_histogram(bins = 7, color="darkblue", fill="lightblue") +
ggtitle("Histogram of residuals")
ggplot(results.df, aes(x = error)) + geom_histogram(bins = 7, color="darkblue", fill="blue") +
ggtitle("Histogram of residuals")
ggplot(results.df, aes(x = error)) + geom_histogram(bins = 7, color="darkblue", fill="lightgreen") +
ggtitle("Histogram of residuals")
ggplot(results.df, aes(x = error)) + geom_histogram(bins = 7, color="darkblue", fill="steelblue") +
ggtitle("Histogram of residuals")
hist(results.df$error, breaks=100, freq=FALSE,
main='Case 1: Normal Errors', xlab='Coefficient Estimation')
curve(dnorm(x, mean=mean(results.df$error), sd=sd(results.df$error)),
col='red', lwd=3, add=TRUE)
abline(v=0.3, col='red', lwd=3)
str(summary(model1))
all.equal(results.df$error, summary(model1$residuals))
all.equal(results.df$error, summary(model1$residuals)[1])
all.equal(results.df$error, summary(model1$residuals)[[1]])
head(summary(model1$residuals[[1]]))
str(predicted.charges)
model1$df.residual
model1$.residual
model1$residual
all.equal(model1$residual, results.df$error)
head(model1$residuals)
head(results.df$error)
ggplot(model1, aes(.residuals)) +
geom_histogram(bins = 7, color="darkblue", fill="steelblue")
ggplot(model1, aes(.resid)) +
geom_histogram(bins = 7, color="darkblue", fill="steelblue")
residuals(model1)
install.packages(c("classInt", "quanteda", "spacyr", "tinytex", "tseries", "XML"))
